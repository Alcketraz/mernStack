{"ast":null,"code":"import _objectSpread from \"D:\\\\FINAL_YEAR_PROJECT\\\\ecommerce-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nexport const addItem = (item, next) => {\n  let cart = [];\n\n  if (typeof window !== \"undefined\") {\n    if (localStorage.getItem(\"cart\")) {\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\n    }\n\n    cart.push(_objectSpread({}, item, {\n      count: 1\n    })); // remove duplicates\n    // build an Array from new Set and turn it back into array using Array.from\n    // so that later we can re-map it\n    // new set will only allow unique values in it\n    // so pass the ids of each object/product\n    // If the loop tries to add the same value again, it'll get ignored\n    // ...with the array of ids we got on when first map() was used\n    // run map() on it again and return the actual product from the cart\n\n    cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\n      return cart.find(p => p._id === id);\n    });\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\n    next();\n  }\n};","map":{"version":3,"sources":["D:\\FINAL_YEAR_PROJECT\\ecommerce-front\\src\\core\\cartHelpers.js"],"names":["addItem","item","next","cart","window","localStorage","getItem","JSON","parse","push","count","Array","from","Set","map","p","_id","id","find","setItem","stringify"],"mappings":";AAAA,OAAO,MAAMA,OAAO,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACrC,MAAIC,IAAI,GAAG,EAAX;;AACA,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC,QAAIC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAJ,EAAkC;AAChCH,MAAAA,IAAI,GAAGI,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAP;AACD;;AACDH,IAAAA,IAAI,CAACM,IAAL,mBACKR,IADL;AAEES,MAAAA,KAAK,EAAE;AAFT,QAJiC,CASjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAP,IAAAA,IAAI,GAAGQ,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQV,IAAI,CAACW,GAAL,CAAUC,CAAD,IAAOA,CAAC,CAACC,GAAlB,CAAR,CAAX,EAA4CF,GAA5C,CAAiDG,EAAD,IAAQ;AAC7D,aAAOd,IAAI,CAACe,IAAL,CAAWH,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUC,EAA3B,CAAP;AACD,KAFM,CAAP;AAIAZ,IAAAA,YAAY,CAACc,OAAb,CAAqB,MAArB,EAA6BZ,IAAI,CAACa,SAAL,CAAejB,IAAf,CAA7B;AACAD,IAAAA,IAAI;AACL;AACF,CA3BM","sourcesContent":["export const addItem = (item, next) => {\r\n  let cart = [];\r\n  if (typeof window !== \"undefined\") {\r\n    if (localStorage.getItem(\"cart\")) {\r\n      cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n    }\r\n    cart.push({\r\n      ...item,\r\n      count: 1,\r\n    });\r\n\r\n    // remove duplicates\r\n    // build an Array from new Set and turn it back into array using Array.from\r\n    // so that later we can re-map it\r\n    // new set will only allow unique values in it\r\n    // so pass the ids of each object/product\r\n    // If the loop tries to add the same value again, it'll get ignored\r\n    // ...with the array of ids we got on when first map() was used\r\n    // run map() on it again and return the actual product from the cart\r\n\r\n    cart = Array.from(new Set(cart.map((p) => p._id))).map((id) => {\r\n      return cart.find((p) => p._id === id);\r\n    });\r\n\r\n    localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    next();\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
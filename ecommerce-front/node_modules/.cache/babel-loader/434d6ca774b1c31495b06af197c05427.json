{"ast":null,"code":"import { API } from \"../config\";\nexport const createCategory = (userId, token, category) => {\n  return fetch(\"\".concat(API, \"/category/create/\").concat(userId), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const createProduct = (userId, token, product) => {\n  return fetch(\"\".concat(API, \"/product/create/\").concat(userId), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const getCategories = () => {\n  return fetch(\"\".concat(API, \"/categories\"), {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listOrders = (userId, token) => {\n  return fetch(\"\".concat(API, \"/order/list/\").concat(userId), {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getStatusValues = (userId, token) => {\n  return fetch(\"\".concat(API, \"/order/status-values/\").concat(userId), {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateOrderStatus = (userId, token, orderId, status) => {\n  return fetch(\"\".concat(API, \"/order/\").concat(orderId, \"/status/\").concat(userId), {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify({\n      status,\n      orderId\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\n/**\r\n * to perform crud on product\r\n * get all products\r\n * get a single product\r\n * update single product\r\n * delete single product\r\n */\n\nexport const getProducts = () => {\n  return fetch(\"\".concat(API, \"/products\"), {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const deleteProduct = (productId, userId, token) => {\n  return fetch(\"\".concat(API, \"/product/\").concat(productId, \"/\").concat(userId), {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getProduct = productId => {\n  return fetch(\"\".concat(API, \"/product/\").concat(productId), {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const updateProduct = (productId, userId, token, product) => {\n  return fetch(\"\".concat(API, \"/product/\").concat(productId, \"/\").concat(userId), {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: product\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["D:\\FINAL_YEAR_PROJECT\\ecommerce-front\\src\\admin\\apiAdmin.js"],"names":["API","createCategory","userId","token","category","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","createProduct","product","getCategories","listOrders","getStatusValues","updateOrderStatus","orderId","status","getProducts","deleteProduct","productId","getProduct","updateProduct"],"mappings":"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","sourcesContent":["import { API } from \"../config\";\r\n\r\nexport const createCategory = (userId, token, category) => {\r\n  return fetch(`${API}/category/create/${userId}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(category),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const createProduct = (userId, token, product) => {\r\n  return fetch(`${API}/product/create/${userId}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: product,\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const getCategories = () => {\r\n  return fetch(`${API}/categories`, {\r\n    method: \"GET\",\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const listOrders = (userId, token) => {\r\n  return fetch(`${API}/order/list/${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getStatusValues = (userId, token) => {\r\n  return fetch(`${API}/order/status-values/${userId}`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const updateOrderStatus = (userId, token, orderId, status) => {\r\n  return fetch(`${API}/order/${orderId}/status/${userId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({ status, orderId }),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\n/**\r\n * to perform crud on product\r\n * get all products\r\n * get a single product\r\n * update single product\r\n * delete single product\r\n */\r\n\r\nexport const getProducts = () => {\r\n  return fetch(`${API}/products`, {\r\n    method: \"GET\",\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const deleteProduct = (productId, userId, token) => {\r\n  return fetch(`${API}/product/${productId}/${userId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const getProduct = (productId) => {\r\n  return fetch(`${API}/product/${productId}`, {\r\n    method: \"GET\",\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n\r\nexport const updateProduct = (productId, userId, token, product) => {\r\n  return fetch(`${API}/product/${productId}/${userId}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: product,\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => console.log(err));\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
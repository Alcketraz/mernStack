{"ast":null,"code":"import _objectSpread from \"D:\\\\FINAL_YEAR_PROJECT\\\\ecommerce-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"D:\\\\FINAL_YEAR_PROJECT\\\\ecommerce-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\FINAL_YEAR_PROJECT\\\\ecommerce-front\\\\src\\\\user\\\\Profile.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { read, update, updateUser } from \"./apiUser\";\n\nconst Profile = ({\n  match\n}) => {\n  const _useState = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    error: false,\n    success: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const _isAuthenticated = isAuthenticated(),\n        token = _isAuthenticated.token;\n\n  const name = values.name,\n        email = values.email,\n        password = values.password,\n        error = values.error,\n        success = values.success;\n\n  const init = userId => {\n    // console.log(userId);\n    read(userId, token).then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: true\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          name: data.name,\n          email: data.email\n        }));\n      }\n    });\n  };\n\n  useEffect(() => {\n    init(match.params.userId);\n  }, []);\n  return React.createElement(Layout, {\n    title: \"Profile\",\n    description: \"Update your profile\",\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Profile update\"), JSON.stringify(values));\n};\n\nexport default Profile;","map":{"version":3,"sources":["D:\\FINAL_YEAR_PROJECT\\ecommerce-front\\src\\user\\Profile.js"],"names":["React","useState","useEffect","Layout","isAuthenticated","Link","read","update","updateUser","Profile","match","name","email","password","error","success","values","setValues","token","init","userId","then","data","params","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,UAAvB,QAAyC,WAAzC;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA,oBACDT,QAAQ,CAAC;AACnCU,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,KAAK,EAAE,EAF4B;AAGnCC,IAAAA,QAAQ,EAAE,EAHyB;AAInCC,IAAAA,KAAK,EAAE,KAJ4B;AAKnCC,IAAAA,OAAO,EAAE;AAL0B,GAAD,CADP;AAAA;AAAA,QACtBC,MADsB;AAAA,QACdC,SADc;;AAAA,2BASXb,eAAe,EATJ;AAAA,QASrBc,KATqB,oBASrBA,KATqB;;AAAA,QAUrBP,IAVqB,GAUqBK,MAVrB,CAUrBL,IAVqB;AAAA,QAUfC,KAVe,GAUqBI,MAVrB,CAUfJ,KAVe;AAAA,QAURC,QAVQ,GAUqBG,MAVrB,CAURH,QAVQ;AAAA,QAUEC,KAVF,GAUqBE,MAVrB,CAUEF,KAVF;AAAA,QAUSC,OAVT,GAUqBC,MAVrB,CAUSD,OAVT;;AAY7B,QAAMI,IAAI,GAAIC,MAAD,IAAY;AACvB;AACAd,IAAAA,IAAI,CAACc,MAAD,EAASF,KAAT,CAAJ,CAAoBG,IAApB,CAA0BC,IAAD,IAAU;AACjC,UAAIA,IAAI,CAACR,KAAT,EAAgB;AACdG,QAAAA,SAAS,mBAAMD,MAAN;AAAcF,UAAAA,KAAK,EAAE;AAArB,WAAT;AACD,OAFD,MAEO;AACLG,QAAAA,SAAS,mBAAMD,MAAN;AAAcL,UAAAA,IAAI,EAAEW,IAAI,CAACX,IAAzB;AAA+BC,UAAAA,KAAK,EAAEU,IAAI,CAACV;AAA3C,WAAT;AACD;AACF,KAND;AAOD,GATD;;AAWAV,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,IAAI,CAACT,KAAK,CAACa,MAAN,CAAaH,MAAd,CAAJ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,WAAW,EAAC,qBAFd;AAGE,IAAA,SAAS,EAAC,iBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBALF,EAMGI,IAAI,CAACC,SAAL,CAAeT,MAAf,CANH,CADF;AAUD,CArCD;;AAuCA,eAAeP,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { read, update, updateUser } from \"./apiUser\";\r\n\r\nconst Profile = ({ match }) => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n\r\n  const { token } = isAuthenticated();\r\n  const { name, email, password, error, success } = values;\r\n\r\n  const init = (userId) => {\r\n    // console.log(userId);\r\n    read(userId, token).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: true });\r\n      } else {\r\n        setValues({ ...values, name: data.name, email: data.email });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    init(match.params.userId);\r\n  }, []);\r\n\r\n  return (\r\n    <Layout\r\n      title=\"Profile\"\r\n      description=\"Update your profile\"\r\n      className=\"container-fluid\"\r\n    >\r\n      <h2 className=\"mb-4\">Profile update</h2>\r\n      {JSON.stringify(values)}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}
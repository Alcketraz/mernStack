{"ast":null,"code":"import _slicedToArray from \"D:\\\\FINAL_YEAR_PROJECT\\\\ecommerce-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\FINAL_YEAR_PROJECT\\\\ecommerce-front\\\\src\\\\core\\\\Checkbox.js\";\nimport React, { useState, useEffect } from \"react\";\n\nconst Checkbox = ({\n  categories\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        checked = _useState2[0],\n        setChecked = _useState2[1]; //c= category id\n\n\n  const handleToggle = c => () => {\n    //return 1st index i.e. -1\n    const currentCategoryId = checked.indexOf(c);\n    const newCheckedCategoryId = [...checked];\n\n    if (currentCategoryId === -1) {\n      newCheckedCategoryId.push(c);\n    } else {\n      newCheckedCategoryId.splice(currentCategoryId, 1);\n    }\n\n    console.log(newCheckedCategoryId);\n  };\n\n  return categories.map((c, i) => React.createElement(\"li\", {\n    key: i,\n    className: \"list-unstyled\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: handleToggle(c._id),\n    type: \"checkbox\",\n    className: \"form-check-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"form-check-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, c.name)));\n};\n\nexport default Checkbox;","map":{"version":3,"sources":["D:\\FINAL_YEAR_PROJECT\\ecommerce-front\\src\\core\\Checkbox.js"],"names":["React","useState","useEffect","Checkbox","categories","checked","setChecked","handleToggle","c","currentCategoryId","indexOf","newCheckedCategoryId","push","splice","console","log","map","i","_id","name"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA,oBACLH,QAAQ,CAAC,EAAD,CADH;AAAA;AAAA,QAC5BI,OAD4B;AAAA,QACnBC,UADmB,kBAGnC;;;AACA,QAAMC,YAAY,GAAIC,CAAD,IAAO,MAAM;AAChC;AACA,UAAMC,iBAAiB,GAAGJ,OAAO,CAACK,OAAR,CAAgBF,CAAhB,CAA1B;AACA,UAAMG,oBAAoB,GAAG,CAAC,GAAGN,OAAJ,CAA7B;;AAEA,QAAII,iBAAiB,KAAK,CAAC,CAA3B,EAA8B;AAC5BE,MAAAA,oBAAoB,CAACC,IAArB,CAA0BJ,CAA1B;AACD,KAFD,MAEO;AACLG,MAAAA,oBAAoB,CAACE,MAArB,CAA4BJ,iBAA5B,EAA+C,CAA/C;AACD;;AAEDK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,oBAAZ;AACD,GAZD;;AAaA,SAAOP,UAAU,CAACY,GAAX,CAAe,CAACR,CAAD,EAAIS,CAAJ,KACpB;AAAI,IAAA,GAAG,EAAEA,CAAT;AAAY,IAAA,SAAS,EAAC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,QAAQ,EAAEV,YAAY,CAACC,CAAC,CAACU,GAAH,CADxB;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,SAAS,EAAC,kBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAO,IAAA,SAAS,EAAC,kBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCV,CAAC,CAACW,IAAvC,CANF,CADK,CAAP;AAUD,CA3BD;;AA6BA,eAAehB,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Checkbox = ({ categories }) => {\r\n  const [checked, setChecked] = useState([]);\r\n\r\n  //c= category id\r\n  const handleToggle = (c) => () => {\r\n    //return 1st index i.e. -1\r\n    const currentCategoryId = checked.indexOf(c);\r\n    const newCheckedCategoryId = [...checked];\r\n\r\n    if (currentCategoryId === -1) {\r\n      newCheckedCategoryId.push(c);\r\n    } else {\r\n      newCheckedCategoryId.splice(currentCategoryId, 1);\r\n    }\r\n\r\n    console.log(newCheckedCategoryId);\r\n  };\r\n  return categories.map((c, i) => (\r\n    <li key={i} className=\"list-unstyled\">\r\n      <input\r\n        onChange={handleToggle(c._id)}\r\n        type=\"checkbox\"\r\n        className=\"form-check-input\"\r\n      />\r\n      <label className=\"form-check-label\">{c.name}</label>\r\n    </li>\r\n  ));\r\n};\r\n\r\nexport default Checkbox;\r\n"]},"metadata":{},"sourceType":"module"}
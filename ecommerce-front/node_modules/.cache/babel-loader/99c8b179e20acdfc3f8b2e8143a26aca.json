{"ast":null,"code":"import _objectSpread from \"D:\\\\FINAL_YEAR_PROJECT\\\\ecommerce-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"D:\\\\FINAL_YEAR_PROJECT\\\\ecommerce-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\FINAL_YEAR_PROJECT\\\\ecommerce-front\\\\src\\\\core\\\\Checkout.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { getProducts, getBraintreeClientToken, processPayment, createOrder } from \"./apiCore\";\nimport { emptyCart } from \"./cartHelpers\";\nimport Card from \"./Card\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport \"braintree-web\";\nimport DropIn from \"braintree-web-drop-in-react\";\n\nconst Checkout = ({\n  products\n}) => {\n  const _useState = useState({\n    loading: false,\n    success: false,\n    clientToken: null,\n    error: \"\",\n    instance: {},\n    address: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const userId = isAuthenticated() && isAuthenticated().user._id;\n\n  const token = isAuthenticated() && isAuthenticated().token;\n\n  const getToken = (userId, token) => {\n    getBraintreeClientToken(userId, token).then(data => {\n      if (data.error) {\n        setData(_objectSpread({}, data, {\n          error: data.error\n        }));\n      } else {\n        setData({\n          clientToken: data.clientToken\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    getToken(userId, token);\n  }, []);\n\n  const handleAddress = event => {\n    setData(_objectSpread({}, data, {\n      address: event.target.value\n    }));\n  };\n\n  const getTotal = () => {\n    return products.reduce((currentValue, nextValue) => {\n      return currentValue + nextValue.count * nextValue.price;\n    }, 0);\n  };\n\n  const showCheckout = () => {\n    return isAuthenticated() ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, showDropIn()) : React.createElement(Link, {\n      to: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Sign in to checkout\"));\n  };\n\n  let deliveryAddress = data.address;\n\n  const buy = () => {\n    setData({\n      loading: true\n    }); // send the nonce to your server\n    // nonce = data.instance.requestPaymentMethod()\n\n    let nonce;\n    let getNonce = data.instance.requestPaymentMethod().then(data => {\n      // console.log(data);\n      nonce = data.nonce; // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n      // and also total to be charged\n      // console.log(\n      //     \"send nonce and total to process: \",\n      //     nonce,\n      //     getTotal(products)\n      // );\n\n      const paymentData = {\n        paymentMethodNonce: nonce,\n        amount: getTotal(products)\n      };\n      processPayment(userId, token, paymentData).then(response => {\n        console.log(response); // empty cart\n        // create order\n\n        const createOrderData = {\n          products: products,\n          transaction_id: response.transaction.id,\n          amount: response.transaction.amount,\n          address: deliveryAddress\n        };\n        createOrder(userId, token, createOrderData).then(response => {\n          emptyCart(() => {\n            console.log(\"payment success and empty cart\");\n            setData({\n              loading: false,\n              success: true\n            });\n          });\n        }).catch(error => {\n          console.log(error);\n          setData({\n            loading: false\n          });\n        });\n      }).catch(error => {\n        console.log(error);\n        setData({\n          loading: false\n        });\n      });\n    }).catch(error => {\n      // console.log(\"dropin error: \", error);\n      setData(_objectSpread({}, data, {\n        error: error.message\n      }));\n    });\n  };\n\n  const showDropIn = () => React.createElement(\"div\", {\n    onBlur: () => setData(_objectSpread({}, data, {\n      error: \"\"\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, data.clientToken !== null && products.length > 0 ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"gorm-group mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \"Delivery address:\"), React.createElement(\"textarea\", {\n    onChange: handleAddress,\n    className: \"form-control\",\n    value: data.address,\n    placeholder: \"Type your delivery address here...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), React.createElement(DropIn, {\n    options: {\n      authorization: data.clientToken\n    },\n    onInstance: instance => data.instance = instance,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: buy,\n    className: \"btn btn-success btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, \"Pay\")) : null);\n\n  const showError = error => React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    style: {\n      display: error ? \"\" : \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, error);\n\n  const showSuccess = success => React.createElement(\"div\", {\n    className: \"alert alert-info\",\n    style: {\n      display: success ? \"\" : \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Thanks! Your payment was successful!\");\n\n  const showLoading = loading => loading && React.createElement(\"h2\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, \"Loading...\");\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Total: Rs.\", getTotal()), showLoading(data.loading), showSuccess(data.success), showError(data.error), showCheckout());\n};\n\nexport default Checkout;","map":{"version":3,"sources":["D:\\FINAL_YEAR_PROJECT\\ecommerce-front\\src\\core\\Checkout.js"],"names":["React","useState","useEffect","getProducts","getBraintreeClientToken","processPayment","createOrder","emptyCart","Card","isAuthenticated","Link","DropIn","Checkout","products","loading","success","clientToken","error","instance","address","data","setData","userId","user","_id","token","getToken","then","handleAddress","event","target","value","getTotal","reduce","currentValue","nextValue","count","price","showCheckout","showDropIn","deliveryAddress","buy","nonce","getNonce","requestPaymentMethod","paymentData","paymentMethodNonce","amount","response","console","log","createOrderData","transaction_id","transaction","id","catch","message","length","authorization","showError","display","showSuccess","showLoading"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  getProducts,\r\n  getBraintreeClientToken,\r\n  processPayment,\r\n  createOrder,\r\n} from \"./apiCore\";\r\nimport { emptyCart } from \"./cartHelpers\";\r\nimport Card from \"./Card\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"braintree-web\";\r\nimport DropIn from \"braintree-web-drop-in-react\";\r\n\r\nconst Checkout = ({ products }) => {\r\n  const [data, setData] = useState({\r\n    loading: false,\r\n    success: false,\r\n    clientToken: null,\r\n    error: \"\",\r\n    instance: {},\r\n    address: \"\",\r\n  });\r\n\r\n  const userId = isAuthenticated() && isAuthenticated().user._id;\r\n  const token = isAuthenticated() && isAuthenticated().token;\r\n\r\n  const getToken = (userId, token) => {\r\n    getBraintreeClientToken(userId, token).then((data) => {\r\n      if (data.error) {\r\n        setData({ ...data, error: data.error });\r\n      } else {\r\n        setData({ clientToken: data.clientToken });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getToken(userId, token);\r\n  }, []);\r\n\r\n  const handleAddress = (event) => {\r\n    setData({ ...data, address: event.target.value });\r\n  };\r\n\r\n  const getTotal = () => {\r\n    return products.reduce((currentValue, nextValue) => {\r\n      return currentValue + nextValue.count * nextValue.price;\r\n    }, 0);\r\n  };\r\n\r\n  const showCheckout = () => {\r\n    return isAuthenticated() ? (\r\n      <div>{showDropIn()}</div>\r\n    ) : (\r\n      <Link to=\"/signin\">\r\n        <button className=\"btn btn-primary\">Sign in to checkout</button>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  let deliveryAddress = data.address;\r\n\r\n  const buy = () => {\r\n    setData({ loading: true });\r\n    // send the nonce to your server\r\n    // nonce = data.instance.requestPaymentMethod()\r\n    let nonce;\r\n    let getNonce = data.instance\r\n      .requestPaymentMethod()\r\n      .then((data) => {\r\n        // console.log(data);\r\n        nonce = data.nonce;\r\n        // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\r\n        // and also total to be charged\r\n        // console.log(\r\n        //     \"send nonce and total to process: \",\r\n        //     nonce,\r\n        //     getTotal(products)\r\n        // );\r\n        const paymentData = {\r\n          paymentMethodNonce: nonce,\r\n          amount: getTotal(products),\r\n        };\r\n\r\n        processPayment(userId, token, paymentData)\r\n          .then((response) => {\r\n            console.log(response);\r\n            // empty cart\r\n            // create order\r\n\r\n            const createOrderData = {\r\n              products: products,\r\n              transaction_id: response.transaction.id,\r\n              amount: response.transaction.amount,\r\n              address: deliveryAddress,\r\n            };\r\n\r\n            createOrder(userId, token, createOrderData)\r\n              .then((response) => {\r\n                emptyCart(() => {\r\n                  console.log(\"payment success and empty cart\");\r\n                  setData({\r\n                    loading: false,\r\n                    success: true,\r\n                  });\r\n                });\r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n                setData({ loading: false });\r\n              });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            setData({ loading: false });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        // console.log(\"dropin error: \", error);\r\n        setData({ ...data, error: error.message });\r\n      });\r\n  };\r\n\r\n  const showDropIn = () => (\r\n    <div onBlur={() => setData({ ...data, error: \"\" })}>\r\n      {data.clientToken !== null && products.length > 0 ? (\r\n        <div>\r\n          <div className=\"gorm-group mb-3\">\r\n            <label className=\"text-muted\">Delivery address:</label>\r\n            <textarea\r\n              onChange={handleAddress}\r\n              className=\"form-control\"\r\n              value={data.address}\r\n              placeholder=\"Type your delivery address here...\"\r\n            />\r\n          </div>\r\n\r\n          <DropIn\r\n            options={{\r\n              authorization: data.clientToken,\r\n            }}\r\n            onInstance={(instance) => (data.instance = instance)}\r\n          />\r\n          <button onClick={buy} className=\"btn btn-success btn-block\">\r\n            Pay\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n\r\n  const showError = (error) => (\r\n    <div\r\n      className=\"alert alert-danger\"\r\n      style={{ display: error ? \"\" : \"none\" }}\r\n    >\r\n      {error}\r\n    </div>\r\n  );\r\n\r\n  const showSuccess = (success) => (\r\n    <div\r\n      className=\"alert alert-info\"\r\n      style={{ display: success ? \"\" : \"none\" }}\r\n    >\r\n      Thanks! Your payment was successful!\r\n    </div>\r\n  );\r\n\r\n  const showLoading = (loading) =>\r\n    loading && <h2 className=\"text-danger\">Loading...</h2>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Total: Rs.{getTotal()}</h2>\r\n      {showLoading(data.loading)}\r\n      {showSuccess(data.success)}\r\n      {showError(data.error)}\r\n      {showCheckout()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}
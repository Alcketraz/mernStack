{"ast":null,"code":"import _objectSpread from \"D:\\\\FINAL_YEAR_PROJECT\\\\ecommerce-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"D:\\\\FINAL_YEAR_PROJECT\\\\ecommerce-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\FINAL_YEAR_PROJECT\\\\ecommerce-front\\\\src\\\\user\\\\Profile.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { read, update, updateUser } from \"./apiUser\";\n\nconst Profile = ({\n  match\n}) => {\n  const _useState = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    error: false,\n    success: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n\n  const _isAuthenticated = isAuthenticated(),\n        token = _isAuthenticated.token;\n\n  const name = values.name,\n        email = values.email,\n        password = values.password,\n        error = values.error,\n        success = values.success;\n\n  const init = userId => {\n    // console.log(userId);\n    read(userId, token).then(data => {\n      if (data.error) {\n        setValues(_objectSpread({}, values, {\n          error: true\n        }));\n      } else {\n        setValues(_objectSpread({}, values, {\n          name: data.name,\n          email: data.email\n        }));\n      }\n    });\n  };\n\n  useEffect(() => {\n    init(match.params.userId);\n  }, []);\n\n  const handleChange = name => e => {\n    setValues(_objectSpread({}, values, {\n      error: false,\n      [name]: e.target.value\n    }));\n  };\n\n  const clickSubmit = e => {\n    e.preventDefault();\n    update(match.params.userId, token, {\n      name,\n      email,\n      password\n    }).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        updateUser(data, () => {\n          setValues(_objectSpread({}, values, {\n            name: data.name,\n            email: data.email,\n            success: true\n          }));\n        });\n      }\n    });\n  };\n\n  const redirectUser = success => {\n    if (success) {\n      return React.createElement(Redirect, {\n        to: \"/cart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    }\n  };\n\n  const profileUpdate = (name, email, password) => React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Name\"), React.createElement(\"input\", {\n    type: \"text\",\n    onChange: handleChange(\"name\"),\n    className: \"form-control\",\n    value: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    type: \"email\",\n    onChange: handleChange(\"email\"),\n    className: \"form-control\",\n    value: email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"text-muted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    type: \"password\",\n    onChange: handleChange(\"password\"),\n    className: \"form-control\",\n    value: password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    onClick: clickSubmit,\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Submit\"));\n\n  return React.createElement(Layout, {\n    title: \"Profile\",\n    description: \"Update your profile\",\n    className: \"container-fluid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Profile update\"), profileUpdate(name, email, password), redirectUser(success));\n};\n\nexport default Profile;","map":{"version":3,"sources":["D:\\FINAL_YEAR_PROJECT\\ecommerce-front\\src\\user\\Profile.js"],"names":["React","useState","useEffect","Layout","isAuthenticated","Link","Redirect","read","update","updateUser","Profile","match","name","email","password","error","success","values","setValues","token","init","userId","then","data","params","handleChange","e","target","value","clickSubmit","preventDefault","console","log","redirectUser","profileUpdate"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { read, update, updateUser } from \"./apiUser\";\r\n\r\nconst Profile = ({ match }) => {\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    error: false,\r\n    success: false,\r\n  });\r\n\r\n  const { token } = isAuthenticated();\r\n  const { name, email, password, error, success } = values;\r\n\r\n  const init = (userId) => {\r\n    // console.log(userId);\r\n    read(userId, token).then((data) => {\r\n      if (data.error) {\r\n        setValues({ ...values, error: true });\r\n      } else {\r\n        setValues({ ...values, name: data.name, email: data.email });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    init(match.params.userId);\r\n  }, []);\r\n\r\n  const handleChange = (name) => (e) => {\r\n    setValues({ ...values, error: false, [name]: e.target.value });\r\n  };\r\n\r\n  const clickSubmit = (e) => {\r\n    e.preventDefault();\r\n    update(match.params.userId, token, { name, email, password }).then(\r\n      (data) => {\r\n        if (data.error) {\r\n          console.log(data.error);\r\n        } else {\r\n          updateUser(data, () => {\r\n            setValues({\r\n              ...values,\r\n              name: data.name,\r\n              email: data.email,\r\n              success: true,\r\n            });\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  const redirectUser = (success) => {\r\n    if (success) {\r\n      return <Redirect to=\"/cart\" />;\r\n    }\r\n  };\r\n\r\n  const profileUpdate = (name, email, password) => (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Name</label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={handleChange(\"name\")}\r\n          className=\"form-control\"\r\n          value={name}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Email</label>\r\n        <input\r\n          type=\"email\"\r\n          onChange={handleChange(\"email\")}\r\n          className=\"form-control\"\r\n          value={email}\r\n        />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label className=\"text-muted\">Password</label>\r\n        <input\r\n          type=\"password\"\r\n          onChange={handleChange(\"password\")}\r\n          className=\"form-control\"\r\n          value={password}\r\n        />\r\n      </div>\r\n\r\n      <button onClick={clickSubmit} className=\"btn btn-primary\">\r\n        Submit\r\n      </button>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <Layout\r\n      title=\"Profile\"\r\n      description=\"Update your profile\"\r\n      className=\"container-fluid\"\r\n    >\r\n      <h2 className=\"mb-4\">Profile update</h2>\r\n      {profileUpdate(name, email, password)}\r\n      {redirectUser(success)}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"D:\\\\FINAL_YEAR_PROJECT\\\\ecommerce-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\FINAL_YEAR_PROJECT\\\\ecommerce-front\\\\src\\\\admin\\\\Orders.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { listOrders, getStatusValues } from \"./apiAdmin\";\nimport moment from \"moment\";\n\nconst Orders = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        orders = _useState2[0],\n        setOrders = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        statusValues = _useState4[0],\n        setStatusValues = _useState4[1];\n\n  const _isAuthenticated = isAuthenticated(),\n        user = _isAuthenticated.user,\n        token = _isAuthenticated.token;\n\n  const loadOrders = () => {\n    listOrders(user._id, token).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setOrders(data);\n      }\n    });\n  };\n\n  const loadStatusValues = () => {\n    getStatusValues(user._id, token).then(data => {\n      if (data.error) {\n        console.log(data.error);\n      } else {\n        setStatusValues(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadOrders();\n    loadStatusValues();\n  }, []);\n\n  const showOrdersLength = () => {\n    if (orders.length > 0) {\n      return React.createElement(\"h1\", {\n        className: \"text-danger display-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Total orders: \", orders.length);\n    } else {\n      return React.createElement(\"h1\", {\n        className: \"text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"No orders\");\n    }\n  };\n\n  const showInput = (key, value) => React.createElement(\"div\", {\n    className: \"input-group mb-2 mr-sm-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group-prepend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, key)), React.createElement(\"input\", {\n    type: \"text\",\n    value: value,\n    className: \"form-control\",\n    readOnly: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n\n  const handleStatusChange = (e, orderId) => {\n    console.log(\"update order status\");\n  };\n\n  const showStatus = o => React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"mark mb-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Status: \", o.status), React.createElement(\"select\", {\n    className: \"form-control\",\n    onChange: e => handleStatusChange(e, o._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Update Status\"), statusValues.map((status, index) => React.createElement(\"option\", {\n    key: index,\n    value: status,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, status))));\n\n  return React.createElement(Layout, {\n    title: \"Orders\",\n    description: \"G'day \".concat(user.name, \", you can manage all the orders here\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-md-8 offset-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, showOrdersLength(), orders.map((o, oIndex) => {\n    return React.createElement(\"div\", {\n      className: \"mt-5\",\n      key: oIndex,\n      style: {\n        borderBottom: \"5px solid indigo\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"bg-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Order ID: \", o._id)), React.createElement(\"ul\", {\n      className: \"list-group mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, showStatus(o)), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Transaction ID: \", o.transaction_id), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Amount: $\", o.amount), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Ordered by: \", o.user.name), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Ordered on: \", moment(o.createdAt).fromNow()), React.createElement(\"li\", {\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Delivery address: \", o.address)), React.createElement(\"h3\", {\n      className: \"mt-4 mb-4 font-italic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Total products in the order: \", o.products.length), o.products.map((p, pIndex) => React.createElement(\"div\", {\n      className: \"mb-4\",\n      key: pIndex,\n      style: {\n        padding: \"20px\",\n        border: \"1px solid indigo\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, showInput(\"Product name\", p.name), showInput(\"Product price\", p.price), showInput(\"Product total\", p.count), showInput(\"Product Id\", p._id))));\n  }))));\n};\n\nexport default Orders;","map":{"version":3,"sources":["D:\\FINAL_YEAR_PROJECT\\ecommerce-front\\src\\admin\\Orders.js"],"names":["React","useState","useEffect","Layout","isAuthenticated","Link","listOrders","getStatusValues","moment","Orders","orders","setOrders","statusValues","setStatusValues","user","token","loadOrders","_id","then","data","error","console","log","loadStatusValues","showOrdersLength","length","showInput","key","value","handleStatusChange","e","orderId","showStatus","o","status","map","index","name","oIndex","borderBottom","transaction_id","amount","createdAt","fromNow","address","products","p","pIndex","padding","border","price","count"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { listOrders, getStatusValues } from \"./apiAdmin\";\r\nimport moment from \"moment\";\r\n\r\nconst Orders = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [statusValues, setStatusValues] = useState([]);\r\n\r\n  const { user, token } = isAuthenticated();\r\n\r\n  const loadOrders = () => {\r\n    listOrders(user._id, token).then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        setOrders(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  const loadStatusValues = () => {\r\n    getStatusValues(user._id, token).then((data) => {\r\n      if (data.error) {\r\n        console.log(data.error);\r\n      } else {\r\n        setStatusValues(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadOrders();\r\n    loadStatusValues();\r\n  }, []);\r\n\r\n  const showOrdersLength = () => {\r\n    if (orders.length > 0) {\r\n      return (\r\n        <h1 className=\"text-danger display-2\">Total orders: {orders.length}</h1>\r\n      );\r\n    } else {\r\n      return <h1 className=\"text-danger\">No orders</h1>;\r\n    }\r\n  };\r\n\r\n  const showInput = (key, value) => (\r\n    <div className=\"input-group mb-2 mr-sm-2\">\r\n      <div className=\"input-group-prepend\">\r\n        <div className=\"input-group-text\">{key}</div>\r\n      </div>\r\n      <input type=\"text\" value={value} className=\"form-control\" readOnly />\r\n    </div>\r\n  );\r\n\r\n  const handleStatusChange = (e, orderId) => {\r\n    console.log(\"update order status\");\r\n  };\r\n\r\n  const showStatus = (o) => (\r\n    <div className=\"form-group\">\r\n      <h3 className=\"mark mb-4\">Status: {o.status}</h3>\r\n      <select\r\n        className=\"form-control\"\r\n        onChange={(e) => handleStatusChange(e, o._id)}\r\n      >\r\n        <option>Update Status</option>\r\n        {statusValues.map((status, index) => (\r\n          <option key={index} value={status}>\r\n            {status}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Layout\r\n      title=\"Orders\"\r\n      description={`G'day ${user.name}, you can manage all the orders here`}\r\n    >\r\n      <div className=\"row\">\r\n        <div className=\"col-md-8 offset-md-2\">\r\n          {showOrdersLength()}\r\n\r\n          {orders.map((o, oIndex) => {\r\n            return (\r\n              <div\r\n                className=\"mt-5\"\r\n                key={oIndex}\r\n                style={{ borderBottom: \"5px solid indigo\" }}\r\n              >\r\n                <h2 className=\"mb-5\">\r\n                  <span className=\"bg-primary\">Order ID: {o._id}</span>\r\n                </h2>\r\n\r\n                <ul className=\"list-group mb-2\">\r\n                  <li className=\"list-group-item\">{showStatus(o)}</li>\r\n                  <li className=\"list-group-item\">\r\n                    Transaction ID: {o.transaction_id}\r\n                  </li>\r\n                  <li className=\"list-group-item\">Amount: ${o.amount}</li>\r\n                  <li className=\"list-group-item\">Ordered by: {o.user.name}</li>\r\n                  <li className=\"list-group-item\">\r\n                    Ordered on: {moment(o.createdAt).fromNow()}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Delivery address: {o.address}\r\n                  </li>\r\n                </ul>\r\n\r\n                <h3 className=\"mt-4 mb-4 font-italic\">\r\n                  Total products in the order: {o.products.length}\r\n                </h3>\r\n\r\n                {o.products.map((p, pIndex) => (\r\n                  <div\r\n                    className=\"mb-4\"\r\n                    key={pIndex}\r\n                    style={{\r\n                      padding: \"20px\",\r\n                      border: \"1px solid indigo\",\r\n                    }}\r\n                  >\r\n                    {showInput(\"Product name\", p.name)}\r\n                    {showInput(\"Product price\", p.price)}\r\n                    {showInput(\"Product total\", p.count)}\r\n                    {showInput(\"Product Id\", p._id)}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n"]},"metadata":{},"sourceType":"module"}
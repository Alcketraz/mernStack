{"ast":null,"code":"import { API } from \"../config\";\nexport const createCategory = (userId, token, category) => {\n  return fetch(\"\".concat(API, \"/category/create/\").concat(userId), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(category)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const signin = user => {\n  return fetch(\"\".concat(API, \"/signin\"), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const authenticate = (data, next) => {\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"jwt\", JSON.stringify(data));\n    next();\n  }\n};\nexport const signout = next => {\n  if (typeof window !== \"undefined\") {\n    localStorage.removeItem(\"jwt\");\n    next();\n    return fetch(\"\".concat(API, \"/signout\"), {\n      method: \"GET\"\n    }).then(response => {\n      console.log(\"Logged out successfully!\", response);\n    }).catch(err => console.log(err));\n  }\n};\nexport const isAuthenticated = () => {\n  if (typeof window == \"undefined\") {\n    return false;\n  }\n\n  if (localStorage.getItem(\"jwt\")) {\n    return JSON.parse(localStorage.getItem(\"jwt\"));\n  } else {\n    return false;\n  }\n};","map":{"version":3,"sources":["D:\\FINAL_YEAR_PROJECT\\ecommerce-front\\src\\admin\\apiAdmin.js"],"names":["API","createCategory","userId","token","category","fetch","method","headers","Accept","Authorization","body","JSON","stringify","then","response","json","catch","err","console","log","signin","user","authenticate","data","next","window","localStorage","setItem","signout","removeItem","isAuthenticated","getItem","parse"],"mappings":"AAAA,SAASA,GAAT,QAAoB,WAApB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAACC,MAAD,EAASC,KAAT,EAAgBC,QAAhB,KAA6B;AACzD,SAAOC,KAAK,WAAIL,GAAJ,8BAA2BE,MAA3B,GAAqC;AAC/CI,IAAAA,MAAM,EAAE,MADuC;AAE/CC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB,kBAFT;AAGPC,MAAAA,aAAa,mBAAYN,KAAZ;AAHN,KAFsC;AAO/CO,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,QAAf;AAPyC,GAArC,CAAL,CASJS,IATI,CASEC,QAAD,IAAc;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAXI,EAYJC,KAZI,CAYGC,GAAD,IAAS;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAdI,CAAP;AAeD,CAhBM;AAkBP,OAAO,MAAMG,MAAM,GAAIC,IAAD,IAAU;AAC9B,SAAOhB,KAAK,WAAIL,GAAJ,cAAkB;AAC5BM,IAAAA,MAAM,EAAE,MADoB;AAE5BC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFmB;AAM5BE,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeS,IAAf;AANsB,GAAlB,CAAL,CAQJR,IARI,CAQEC,QAAD,IAAc;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAVI,EAWJC,KAXI,CAWGC,GAAD,IAAS;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAbI,CAAP;AAcD,CAfM;AAiBP,OAAO,MAAMK,YAAY,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC1C,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjCC,IAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BhB,IAAI,CAACC,SAAL,CAAeW,IAAf,CAA5B;AACAC,IAAAA,IAAI;AACL;AACF,CALM;AAOP,OAAO,MAAMI,OAAO,GAAIJ,IAAD,IAAU;AAC/B,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjCC,IAAAA,YAAY,CAACG,UAAb,CAAwB,KAAxB;AACAL,IAAAA,IAAI;AACJ,WAAOnB,KAAK,WAAIL,GAAJ,eAAmB;AAC7BM,MAAAA,MAAM,EAAE;AADqB,KAAnB,CAAL,CAGJO,IAHI,CAGEC,QAAD,IAAc;AAClBI,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCL,QAAxC;AACD,KALI,EAMJE,KANI,CAMGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANX,CAAP;AAOD;AACF,CAZM;AAaP,OAAO,MAAMa,eAAe,GAAG,MAAM;AACnC,MAAI,OAAOL,MAAP,IAAiB,WAArB,EAAkC;AAChC,WAAO,KAAP;AACD;;AACD,MAAIC,YAAY,CAACK,OAAb,CAAqB,KAArB,CAAJ,EAAiC;AAC/B,WAAOpB,IAAI,CAACqB,KAAL,CAAWN,YAAY,CAACK,OAAb,CAAqB,KAArB,CAAX,CAAP;AACD,GAFD,MAEO;AACL,WAAO,KAAP;AACD;AACF,CATM","sourcesContent":["import { API } from \"../config\";\r\n\r\nexport const createCategory = (userId, token, category) => {\r\n  return fetch(`${API}/category/create/${userId}`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(category),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const signin = (user) => {\r\n  return fetch(`${API}/signin`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(user),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const authenticate = (data, next) => {\r\n  if (typeof window !== \"undefined\") {\r\n    localStorage.setItem(\"jwt\", JSON.stringify(data));\r\n    next();\r\n  }\r\n};\r\n\r\nexport const signout = (next) => {\r\n  if (typeof window !== \"undefined\") {\r\n    localStorage.removeItem(\"jwt\");\r\n    next();\r\n    return fetch(`${API}/signout`, {\r\n      method: \"GET\",\r\n    })\r\n      .then((response) => {\r\n        console.log(\"Logged out successfully!\", response);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n};\r\nexport const isAuthenticated = () => {\r\n  if (typeof window == \"undefined\") {\r\n    return false;\r\n  }\r\n  if (localStorage.getItem(\"jwt\")) {\r\n    return JSON.parse(localStorage.getItem(\"jwt\"));\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}